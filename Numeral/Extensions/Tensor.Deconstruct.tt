<#@ template language="C#" #>
<#@ output extension=".generated.cs" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>

using System;
using System.Buffers;
using System.Numerics;
using System.Runtime.CompilerServices;

using Numeral.Internals;

namespace Numeral
{
    public static partial class Tensor
    {
<#
for (int j = 0; j < 16; j++) 
{
    var args = Enumerable.Range(0, j + 1)
            .Select(i => $"out T x{i}")
            .Aggregate((a, b) => $"{a}, {b}");
#>
        public static void Deconstruct<T>(this Tensor<T> tensor, <#= args #>)
        {
<#
for (int k = 0; k < j + 1; k++)
{
#>
            x<#= k #> = tensor.GetFlat(<#= k #>);
<#
}
#>
        }

        public static void Deconstruct<T>(this T[] array, <#= args #>)
        {
<#
for (int k = 0; k < j + 1; k++)
{
#>
            x<#= k #> = array[<#= k #>];
<#
}
#>
        }
<#
}
#>
    }
}